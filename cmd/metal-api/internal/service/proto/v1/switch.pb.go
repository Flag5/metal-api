// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.20.0
// 	protoc        v3.11.4
// source: v1/switch.proto

package v1

import (
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type BGPFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CIDRs []string                `protobuf:"bytes,1,rep,name=CIDRs,proto3" json:"CIDRs,omitempty"` // the cidr addresses that are allowed to be announced at this switch port
	VNIs  []*wrappers.StringValue `protobuf:"bytes,2,rep,name=VNIs,proto3" json:"VNIs,omitempty"`   // the virtual networks that are exposed at this switch port
}

func (x *BGPFilter) Reset() {
	*x = BGPFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_switch_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BGPFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BGPFilter) ProtoMessage() {}

func (x *BGPFilter) ProtoReflect() protoreflect.Message {
	mi := &file_v1_switch_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BGPFilter.ProtoReflect.Descriptor instead.
func (*BGPFilter) Descriptor() ([]byte, []int) {
	return file_v1_switch_proto_rawDescGZIP(), []int{0}
}

func (x *BGPFilter) GetCIDRs() []string {
	if x != nil {
		return x.CIDRs
	}
	return nil
}

func (x *BGPFilter) GetVNIs() []*wrappers.StringValue {
	if x != nil {
		return x.VNIs
	}
	return nil
}

type SwitchNic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MacAddress string                `protobuf:"bytes,1,opt,name=macAddress,proto3" json:"macAddress,omitempty"` // the mac address of this network interface
	Name       string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`             // the name of this network interface
	Vrf        *wrappers.StringValue `protobuf:"bytes,3,opt,name=vrf,proto3" json:"vrf,omitempty"`               // the vrf this network interface is part of
	BGPFilter  *BGPFilter            `protobuf:"bytes,4,opt,name=BGPFilter,proto3" json:"BGPFilter,omitempty"`   // configures the bgp filter applied at the switch port
}

func (x *SwitchNic) Reset() {
	*x = SwitchNic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_switch_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchNic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchNic) ProtoMessage() {}

func (x *SwitchNic) ProtoReflect() protoreflect.Message {
	mi := &file_v1_switch_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchNic.ProtoReflect.Descriptor instead.
func (*SwitchNic) Descriptor() ([]byte, []int) {
	return file_v1_switch_proto_rawDescGZIP(), []int{1}
}

func (x *SwitchNic) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *SwitchNic) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SwitchNic) GetVrf() *wrappers.StringValue {
	if x != nil {
		return x.Vrf
	}
	return nil
}

func (x *SwitchNic) GetBGPFilter() *BGPFilter {
	if x != nil {
		return x.BGPFilter
	}
	return nil
}

type SwitchConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nic       string                `protobuf:"bytes,1,opt,name=nic,proto3" json:"nic,omitempty"`             // a network interface on the switch
	MachineID *wrappers.StringValue `protobuf:"bytes,2,opt,name=machineID,proto3" json:"machineID,omitempty"` // the machine id of the machine connected to the nic
}

func (x *SwitchConnection) Reset() {
	*x = SwitchConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_switch_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchConnection) ProtoMessage() {}

func (x *SwitchConnection) ProtoReflect() protoreflect.Message {
	mi := &file_v1_switch_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchConnection.ProtoReflect.Descriptor instead.
func (*SwitchConnection) Descriptor() ([]byte, []int) {
	return file_v1_switch_proto_rawDescGZIP(), []int{2}
}

func (x *SwitchConnection) GetNic() string {
	if x != nil {
		return x.Nic
	}
	return ""
}

func (x *SwitchConnection) GetMachineID() *wrappers.StringValue {
	if x != nil {
		return x.MachineID
	}
	return nil
}

// A switch that can register at the api
type Switch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *Common      `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	RackID string       `protobuf:"bytes,2,opt,name=rackID,proto3" json:"rackID,omitempty"` // the id of the rack in which this switch is located
	Nics   []*SwitchNic `protobuf:"bytes,3,rep,name=nics,proto3" json:"nics,omitempty"`     // the list of network interfaces on the switch
}

func (x *Switch) Reset() {
	*x = Switch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_switch_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Switch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Switch) ProtoMessage() {}

func (x *Switch) ProtoReflect() protoreflect.Message {
	mi := &file_v1_switch_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Switch.ProtoReflect.Descriptor instead.
func (*Switch) Descriptor() ([]byte, []int) {
	return file_v1_switch_proto_rawDescGZIP(), []int{3}
}

func (x *Switch) GetCommon() *Common {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *Switch) GetRackID() string {
	if x != nil {
		return x.RackID
	}
	return ""
}

func (x *Switch) GetNics() []*SwitchNic {
	if x != nil {
		return x.Nics
	}
	return nil
}

type SwitchRegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Switch      *Switch `protobuf:"bytes,1,opt,name=switch,proto3" json:"switch,omitempty"`
	PartitionID string  `protobuf:"bytes,2,opt,name=partitionID,proto3" json:"partitionID,omitempty"` // the partition in which this switch is located
}

func (x *SwitchRegisterRequest) Reset() {
	*x = SwitchRegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_switch_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchRegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchRegisterRequest) ProtoMessage() {}

func (x *SwitchRegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_switch_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchRegisterRequest.ProtoReflect.Descriptor instead.
func (*SwitchRegisterRequest) Descriptor() ([]byte, []int) {
	return file_v1_switch_proto_rawDescGZIP(), []int{4}
}

func (x *SwitchRegisterRequest) GetSwitch() *Switch {
	if x != nil {
		return x.Switch
	}
	return nil
}

func (x *SwitchRegisterRequest) GetPartitionID() string {
	if x != nil {
		return x.PartitionID
	}
	return ""
}

type SwitchGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifiable *Identifiable `protobuf:"bytes,1,opt,name=identifiable,proto3" json:"identifiable,omitempty"`
}

func (x *SwitchGetRequest) Reset() {
	*x = SwitchGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_switch_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchGetRequest) ProtoMessage() {}

func (x *SwitchGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_switch_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchGetRequest.ProtoReflect.Descriptor instead.
func (*SwitchGetRequest) Descriptor() ([]byte, []int) {
	return file_v1_switch_proto_rawDescGZIP(), []int{5}
}

func (x *SwitchGetRequest) GetIdentifiable() *Identifiable {
	if x != nil {
		return x.Identifiable
	}
	return nil
}

type SwitchFindRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FindCriteria *FindCriteria `protobuf:"bytes,1,opt,name=findCriteria,proto3" json:"findCriteria,omitempty"`
}

func (x *SwitchFindRequest) Reset() {
	*x = SwitchFindRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_switch_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchFindRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchFindRequest) ProtoMessage() {}

func (x *SwitchFindRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_switch_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchFindRequest.ProtoReflect.Descriptor instead.
func (*SwitchFindRequest) Descriptor() ([]byte, []int) {
	return file_v1_switch_proto_rawDescGZIP(), []int{6}
}

func (x *SwitchFindRequest) GetFindCriteria() *FindCriteria {
	if x != nil {
		return x.FindCriteria
	}
	return nil
}

type SwitchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Switch      *Switch             `protobuf:"bytes,1,opt,name=switch,proto3" json:"switch,omitempty"`
	Connections []*SwitchConnection `protobuf:"bytes,2,rep,name=connections,proto3" json:"connections,omitempty"` // a connection between a switch port and a machine
	Partition   *PartitionResponse  `protobuf:"bytes,3,opt,name=partition,proto3" json:"partition,omitempty"`     // the partition in which this switch is located
}

func (x *SwitchResponse) Reset() {
	*x = SwitchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_switch_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchResponse) ProtoMessage() {}

func (x *SwitchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_switch_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchResponse.ProtoReflect.Descriptor instead.
func (*SwitchResponse) Descriptor() ([]byte, []int) {
	return file_v1_switch_proto_rawDescGZIP(), []int{7}
}

func (x *SwitchResponse) GetSwitch() *Switch {
	if x != nil {
		return x.Switch
	}
	return nil
}

func (x *SwitchResponse) GetConnections() []*SwitchConnection {
	if x != nil {
		return x.Connections
	}
	return nil
}

func (x *SwitchResponse) GetPartition() *PartitionResponse {
	if x != nil {
		return x.Partition
	}
	return nil
}

type SwitchListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SwitchListRequest) Reset() {
	*x = SwitchListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_switch_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchListRequest) ProtoMessage() {}

func (x *SwitchListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_switch_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchListRequest.ProtoReflect.Descriptor instead.
func (*SwitchListRequest) Descriptor() ([]byte, []int) {
	return file_v1_switch_proto_rawDescGZIP(), []int{8}
}

type SwitchListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Switchs []*Switch `protobuf:"bytes,1,rep,name=switchs,proto3" json:"switchs,omitempty"`
}

func (x *SwitchListResponse) Reset() {
	*x = SwitchListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_switch_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchListResponse) ProtoMessage() {}

func (x *SwitchListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_switch_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchListResponse.ProtoReflect.Descriptor instead.
func (*SwitchListResponse) Descriptor() ([]byte, []int) {
	return file_v1_switch_proto_rawDescGZIP(), []int{9}
}

func (x *SwitchListResponse) GetSwitchs() []*Switch {
	if x != nil {
		return x.Switchs
	}
	return nil
}

var File_v1_switch_proto protoreflect.FileDescriptor

var file_v1_switch_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x76, 0x31, 0x2f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0c, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a,
	0x0f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x12, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x76, 0x31, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x53, 0x0a, 0x09, 0x42,
	0x47, 0x50, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x49, 0x44, 0x52,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x43, 0x49, 0x44, 0x52, 0x73, 0x12, 0x30,
	0x0a, 0x04, 0x56, 0x4e, 0x49, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x56, 0x4e, 0x49, 0x73,
	0x22, 0xa6, 0x01, 0x0a, 0x09, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4e, 0x69, 0x63, 0x12, 0x1e,
	0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x03, 0x76, 0x72, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x03, 0x76,
	0x72, 0x66, 0x12, 0x35, 0x0a, 0x09, 0x42, 0x47, 0x50, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x47, 0x50, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x09,
	0x42, 0x47, 0x50, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x60, 0x0a, 0x10, 0x53, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x6e, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x69, 0x63, 0x12,
	0x3a, 0x0a, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x22, 0x7b, 0x0a, 0x06, 0x53,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x06, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x44, 0x12, 0x2b, 0x0a, 0x04, 0x6e,
	0x69, 0x63, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4e,
	0x69, 0x63, 0x52, 0x04, 0x6e, 0x69, 0x63, 0x73, 0x22, 0x67, 0x0a, 0x15, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x22, 0x52, 0x0a, 0x10, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0c, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0c, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x53, 0x0a, 0x11, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x46,
	0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0c, 0x66, 0x69,
	0x6e, 0x64, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x0c, 0x66, 0x69,
	0x6e, 0x64, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x22, 0xbf, 0x01, 0x0a, 0x0e, 0x53,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a,
	0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x52, 0x06, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x40, 0x0a, 0x0b, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3d, 0x0a,
	0x09, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x13, 0x0a, 0x11,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x44, 0x0a, 0x12, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x73, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x07,
	0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x73, 0x32, 0xb7, 0x02, 0x0a, 0x0d, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x06, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x1e, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x04, 0x46,
	0x69, 0x6e, 0x64, 0x12, 0x1f, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6d, 0x65, 0x74, 0x61, 0x6c, 0x2d, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2f, 0x6d, 0x65, 0x74, 0x61,
	0x6c, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_switch_proto_rawDescOnce sync.Once
	file_v1_switch_proto_rawDescData = file_v1_switch_proto_rawDesc
)

func file_v1_switch_proto_rawDescGZIP() []byte {
	file_v1_switch_proto_rawDescOnce.Do(func() {
		file_v1_switch_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_switch_proto_rawDescData)
	})
	return file_v1_switch_proto_rawDescData
}

var file_v1_switch_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_v1_switch_proto_goTypes = []interface{}{
	(*BGPFilter)(nil),             // 0: metal.api.v1.BGPFilter
	(*SwitchNic)(nil),             // 1: metal.api.v1.SwitchNic
	(*SwitchConnection)(nil),      // 2: metal.api.v1.SwitchConnection
	(*Switch)(nil),                // 3: metal.api.v1.Switch
	(*SwitchRegisterRequest)(nil), // 4: metal.api.v1.SwitchRegisterRequest
	(*SwitchGetRequest)(nil),      // 5: metal.api.v1.SwitchGetRequest
	(*SwitchFindRequest)(nil),     // 6: metal.api.v1.SwitchFindRequest
	(*SwitchResponse)(nil),        // 7: metal.api.v1.SwitchResponse
	(*SwitchListRequest)(nil),     // 8: metal.api.v1.SwitchListRequest
	(*SwitchListResponse)(nil),    // 9: metal.api.v1.SwitchListResponse
	(*wrappers.StringValue)(nil),  // 10: google.protobuf.StringValue
	(*Common)(nil),                // 11: metal.api.v1.Common
	(*Identifiable)(nil),          // 12: metal.api.v1.Identifiable
	(*FindCriteria)(nil),          // 13: metal.api.v1.FindCriteria
	(*PartitionResponse)(nil),     // 14: metal.api.v1.PartitionResponse
}
var file_v1_switch_proto_depIdxs = []int32{
	10, // 0: metal.api.v1.BGPFilter.VNIs:type_name -> google.protobuf.StringValue
	10, // 1: metal.api.v1.SwitchNic.vrf:type_name -> google.protobuf.StringValue
	0,  // 2: metal.api.v1.SwitchNic.BGPFilter:type_name -> metal.api.v1.BGPFilter
	10, // 3: metal.api.v1.SwitchConnection.machineID:type_name -> google.protobuf.StringValue
	11, // 4: metal.api.v1.Switch.common:type_name -> metal.api.v1.Common
	1,  // 5: metal.api.v1.Switch.nics:type_name -> metal.api.v1.SwitchNic
	3,  // 6: metal.api.v1.SwitchRegisterRequest.switch:type_name -> metal.api.v1.Switch
	12, // 7: metal.api.v1.SwitchGetRequest.identifiable:type_name -> metal.api.v1.Identifiable
	13, // 8: metal.api.v1.SwitchFindRequest.findCriteria:type_name -> metal.api.v1.FindCriteria
	3,  // 9: metal.api.v1.SwitchResponse.switch:type_name -> metal.api.v1.Switch
	2,  // 10: metal.api.v1.SwitchResponse.connections:type_name -> metal.api.v1.SwitchConnection
	14, // 11: metal.api.v1.SwitchResponse.partition:type_name -> metal.api.v1.PartitionResponse
	3,  // 12: metal.api.v1.SwitchListResponse.switchs:type_name -> metal.api.v1.Switch
	4,  // 13: metal.api.v1.SwitchService.Update:input_type -> metal.api.v1.SwitchRegisterRequest
	5,  // 14: metal.api.v1.SwitchService.Get:input_type -> metal.api.v1.SwitchGetRequest
	6,  // 15: metal.api.v1.SwitchService.Find:input_type -> metal.api.v1.SwitchFindRequest
	8,  // 16: metal.api.v1.SwitchService.List:input_type -> metal.api.v1.SwitchListRequest
	7,  // 17: metal.api.v1.SwitchService.Update:output_type -> metal.api.v1.SwitchResponse
	7,  // 18: metal.api.v1.SwitchService.Get:output_type -> metal.api.v1.SwitchResponse
	9,  // 19: metal.api.v1.SwitchService.Find:output_type -> metal.api.v1.SwitchListResponse
	9,  // 20: metal.api.v1.SwitchService.List:output_type -> metal.api.v1.SwitchListResponse
	17, // [17:21] is the sub-list for method output_type
	13, // [13:17] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_v1_switch_proto_init() }
func file_v1_switch_proto_init() {
	if File_v1_switch_proto != nil {
		return
	}
	file_v1_common_proto_init()
	file_v1_partition_proto_init()
	file_v1_identifiable_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_v1_switch_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BGPFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_switch_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchNic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_switch_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_switch_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Switch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_switch_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchRegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_switch_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_switch_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchFindRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_switch_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_switch_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_switch_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_switch_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_switch_proto_goTypes,
		DependencyIndexes: file_v1_switch_proto_depIdxs,
		MessageInfos:      file_v1_switch_proto_msgTypes,
	}.Build()
	File_v1_switch_proto = out.File
	file_v1_switch_proto_rawDesc = nil
	file_v1_switch_proto_goTypes = nil
	file_v1_switch_proto_depIdxs = nil
}
