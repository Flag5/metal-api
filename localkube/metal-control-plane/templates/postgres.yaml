---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app: postgres
  name: postgres
spec:
  replicas: 1
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: postgres
    spec:
      containers:
      - image: postgres:11-alpine
        name: postgres
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_DB
              name: postgres-env
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_USER
              name: postgres-env
        - name: POSTGRES_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_PASSWORD
              name: postgres-env
        - name: PGDATA
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_DATA
              name: postgres-env
        volumeMounts:
        - name: postgres
          mountPath: /var/lib/postgresql/data/
      restartPolicy: Always
      volumes:
      - name: postgres
        persistentVolumeClaim:
          claimName: postgres
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    service: postgres
  name: postgres
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations: null
  creationTimestamp: null
  labels:
    app: postgres
  name: postgres
spec:
  ports:
  - name: "postgres"
    port: 5432
    targetPort: 5432
  selector:
    app: postgres
status:
  loadBalancer: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-env
data:
  POSTGRES_DB: ipam
  POSTGRES_USER: ipam
  POSTGRES_PASSWORD: metal
  POSTGRES_DATA: "/var/lib/postgresql/data/pgdata"
