swagger: "2.0"
info:
  description: "Proxy server for the metal project to communicate with netbox using pynetbox."
  version: "1.0.0"
  title: "Netbox API Proxy"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "devops@f-i-ts.de"
  license:
    name: "MIT"
    url: "http://mit.org"
basePath: "/api/v1"
tags:
- name: "devices"
  description: "Endpoints for managing devices in the netbox"
schemes:
- "http"
securityDefinitions:
  Bearer:
    in: "header"
    name: "Authorization"
    type: "apiKey"
    x-apikeyInfoFunc: "netbox_api_proxy.api.api_key_auth"
security:
- Bearer: []
paths:
  /devices/{uuid}/register:
    post:
      tags:
      - "devices"
      summary: "Register a new device"
      description: "Register a new device to the netbox"
      operationId: "netbox_api_proxy.api.device_register"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      - "application/problem+json"
      parameters:
      - $ref: "#/parameters/DeviceUUID"
      - name: "request"
        in: "body"
        description: "The device registration body"
        required: true
        schema:
          $ref: "#/definitions/DeviceRegistrationRequest"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Problem"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Problem"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Problem"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/Problem"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/Problem"
  /devices/{uuid}/allocate:
    post:
      tags:
      - "devices"
      summary: "Allocate a device"
      description: "Allocated a registered device for a tenant"
      operationId: "netbox_api_proxy.api.device_allocate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      - "application/problem+json"
      parameters:
      - $ref: "#/parameters/DeviceUUID"
      - name: "request"
        in: "body"
        description: "The device allocation body"
        required: true
        schema:
          $ref: "#/definitions/DeviceAllocationRequest"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/DeviceAllocationResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Problem"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Problem"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Problem"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/Problem"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/Problem"
  /devices/{uuid}/release:
    post:
      tags:
      - "devices"
      summary: "Releases a device"
      description: "Releases an allocated device"
      operationId: "netbox_api_proxy.api.device_release"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      - "application/problem+json"
      parameters:
      - $ref: "#/parameters/DeviceUUID"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Problem"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Problem"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Problem"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/Problem"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/Problem"
parameters:
  DeviceUUID:
    in: "path"
    name: "uuid"
    description: "The product serial of the device (unique identifier of this device)"
    type: "string"
    required: true
definitions:
  DeviceRegistrationRequest:
    type: "object"
    required:
    - "size"
    - "site"
    - "rack"
    - "nics"
    properties:
      size:
        description: "The size of the device"
        type: "string"
        enum:
        - "unknown"
        - "t1-small-x86"
      site:
        description: "The id of the site"
        type: "string"
        minLength: 1
      rack:
        description: "The name of the rack"
        type: "string"
        minLength: 1
      nics:
        description: "The network interfaces of this device"
        type: "array"
        items:
          $ref: "#/definitions/Nic"
  DeviceAllocationRequest:
    type: "object"
    required:
    - "name"
    - "tenant"
    - "project"
    properties:
      name:
        description: "The desired name for this device in the netbox"
        type: "string"
        minLength: 1
      tenant:
        description: "The name of the tenant to assign this device to"
        type: "string"
        minLength: 1
      project:
        description: "The name of the project to assign this device to"
        type: "string"
        minLength: 1
      os:
        description: "The operating system name that will be installed on this device"
        type: "string"
        minLength: 1
      description:
        description: "Additional description for this device in the netbox"
        type: "string"
        minLength: 1
  DeviceAllocationResponse:
    type: "object"
    required:
    - "cidr"
    properties:
      cidr:
        description: "The allocated cidr"
        type: "string"
  Nic:
    type: "object"
    required:
    - "name"
    - "mac"
    properties:
      name:
        description: "The name of the network interface"
        type: "string"
        minLength: 1
      mac:
        description: "The mac address of the network interface"
        type: "string"
        minLength: 1
  Problem:
    type: "object"
    properties:
      type:
        type: "string"
        format: "uri"
        description: |
          An absolute URI that identifies the problem type.  When dereferenced,
          it SHOULD provide human-readable documentation for the problem type
          (e.g., using HTML).
        default: "about:blank"
      title:
        type: "string"
        description: |
          A short, summary of the problem type. Written in english and readable
          for engineers (usually not suited for non technical stakeholders and
          not localized); example: Service Unavailable
      status:
        type: "integer"
        format: "int32"
        description: |
          The HTTP status code generated by the origin server for this occurrence
          of the problem.
        minimum: 100
        maximum: 600
        exclusiveMaximum: true
        example: 503
      detail:
        type: "string"
        description: |
          A human readable explanation specific to this occurrence of the
          problem.
        example: "Connection to database timed out"
      instance:
        type: "string"
        format: "uri"
        description: |
          An absolute URI that identifies the specific occurrence of the problem.
          It may or may not yield further information if dereferenced.
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
