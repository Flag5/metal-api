// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "git.f-i-ts.de/cloud-native/metal/metal-api/netbox-api/models"
)

// NetboxAPIProxyAPIDeviceRegisterReader is a Reader for the NetboxAPIProxyAPIDeviceRegister structure.
type NetboxAPIProxyAPIDeviceRegisterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NetboxAPIProxyAPIDeviceRegisterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewNetboxAPIProxyAPIDeviceRegisterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewNetboxAPIProxyAPIDeviceRegisterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewNetboxAPIProxyAPIDeviceRegisterUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewNetboxAPIProxyAPIDeviceRegisterForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewNetboxAPIProxyAPIDeviceRegisterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewNetboxAPIProxyAPIDeviceRegisterInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewNetboxAPIProxyAPIDeviceRegisterOK creates a NetboxAPIProxyAPIDeviceRegisterOK with default headers values
func NewNetboxAPIProxyAPIDeviceRegisterOK() *NetboxAPIProxyAPIDeviceRegisterOK {
	return &NetboxAPIProxyAPIDeviceRegisterOK{}
}

/*NetboxAPIProxyAPIDeviceRegisterOK handles this case with default header values.

OK
*/
type NetboxAPIProxyAPIDeviceRegisterOK struct {
}

func (o *NetboxAPIProxyAPIDeviceRegisterOK) Error() string {
	return fmt.Sprintf("[POST /devices/{uuid}/register][%d] netboxApiProxyApiDeviceRegisterOK ", 200)
}

func (o *NetboxAPIProxyAPIDeviceRegisterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNetboxAPIProxyAPIDeviceRegisterBadRequest creates a NetboxAPIProxyAPIDeviceRegisterBadRequest with default headers values
func NewNetboxAPIProxyAPIDeviceRegisterBadRequest() *NetboxAPIProxyAPIDeviceRegisterBadRequest {
	return &NetboxAPIProxyAPIDeviceRegisterBadRequest{}
}

/*NetboxAPIProxyAPIDeviceRegisterBadRequest handles this case with default header values.

Bad request
*/
type NetboxAPIProxyAPIDeviceRegisterBadRequest struct {
	Payload *models.Problem
}

func (o *NetboxAPIProxyAPIDeviceRegisterBadRequest) Error() string {
	return fmt.Sprintf("[POST /devices/{uuid}/register][%d] netboxApiProxyApiDeviceRegisterBadRequest  %+v", 400, o.Payload)
}

func (o *NetboxAPIProxyAPIDeviceRegisterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Problem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNetboxAPIProxyAPIDeviceRegisterUnauthorized creates a NetboxAPIProxyAPIDeviceRegisterUnauthorized with default headers values
func NewNetboxAPIProxyAPIDeviceRegisterUnauthorized() *NetboxAPIProxyAPIDeviceRegisterUnauthorized {
	return &NetboxAPIProxyAPIDeviceRegisterUnauthorized{}
}

/*NetboxAPIProxyAPIDeviceRegisterUnauthorized handles this case with default header values.

Unauthorized
*/
type NetboxAPIProxyAPIDeviceRegisterUnauthorized struct {
	Payload *models.Problem
}

func (o *NetboxAPIProxyAPIDeviceRegisterUnauthorized) Error() string {
	return fmt.Sprintf("[POST /devices/{uuid}/register][%d] netboxApiProxyApiDeviceRegisterUnauthorized  %+v", 401, o.Payload)
}

func (o *NetboxAPIProxyAPIDeviceRegisterUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Problem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNetboxAPIProxyAPIDeviceRegisterForbidden creates a NetboxAPIProxyAPIDeviceRegisterForbidden with default headers values
func NewNetboxAPIProxyAPIDeviceRegisterForbidden() *NetboxAPIProxyAPIDeviceRegisterForbidden {
	return &NetboxAPIProxyAPIDeviceRegisterForbidden{}
}

/*NetboxAPIProxyAPIDeviceRegisterForbidden handles this case with default header values.

Forbidden
*/
type NetboxAPIProxyAPIDeviceRegisterForbidden struct {
	Payload *models.Problem
}

func (o *NetboxAPIProxyAPIDeviceRegisterForbidden) Error() string {
	return fmt.Sprintf("[POST /devices/{uuid}/register][%d] netboxApiProxyApiDeviceRegisterForbidden  %+v", 403, o.Payload)
}

func (o *NetboxAPIProxyAPIDeviceRegisterForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Problem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNetboxAPIProxyAPIDeviceRegisterNotFound creates a NetboxAPIProxyAPIDeviceRegisterNotFound with default headers values
func NewNetboxAPIProxyAPIDeviceRegisterNotFound() *NetboxAPIProxyAPIDeviceRegisterNotFound {
	return &NetboxAPIProxyAPIDeviceRegisterNotFound{}
}

/*NetboxAPIProxyAPIDeviceRegisterNotFound handles this case with default header values.

Not found
*/
type NetboxAPIProxyAPIDeviceRegisterNotFound struct {
	Payload *models.Problem
}

func (o *NetboxAPIProxyAPIDeviceRegisterNotFound) Error() string {
	return fmt.Sprintf("[POST /devices/{uuid}/register][%d] netboxApiProxyApiDeviceRegisterNotFound  %+v", 404, o.Payload)
}

func (o *NetboxAPIProxyAPIDeviceRegisterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Problem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNetboxAPIProxyAPIDeviceRegisterInternalServerError creates a NetboxAPIProxyAPIDeviceRegisterInternalServerError with default headers values
func NewNetboxAPIProxyAPIDeviceRegisterInternalServerError() *NetboxAPIProxyAPIDeviceRegisterInternalServerError {
	return &NetboxAPIProxyAPIDeviceRegisterInternalServerError{}
}

/*NetboxAPIProxyAPIDeviceRegisterInternalServerError handles this case with default header values.

Internal server error
*/
type NetboxAPIProxyAPIDeviceRegisterInternalServerError struct {
	Payload *models.Problem
}

func (o *NetboxAPIProxyAPIDeviceRegisterInternalServerError) Error() string {
	return fmt.Sprintf("[POST /devices/{uuid}/register][%d] netboxApiProxyApiDeviceRegisterInternalServerError  %+v", 500, o.Payload)
}

func (o *NetboxAPIProxyAPIDeviceRegisterInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Problem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
