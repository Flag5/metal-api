// Code generated by go-swagger; DO NOT EDIT.

package networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "git.f-i-ts.de/cloud-native/metal/metal-api/netbox-api/models"
)

// NewNetboxAPIProxyAPIAllocateNetworkParams creates a new NetboxAPIProxyAPIAllocateNetworkParams object
// with the default values initialized.
func NewNetboxAPIProxyAPIAllocateNetworkParams() *NetboxAPIProxyAPIAllocateNetworkParams {
	var ()
	return &NetboxAPIProxyAPIAllocateNetworkParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewNetboxAPIProxyAPIAllocateNetworkParamsWithTimeout creates a new NetboxAPIProxyAPIAllocateNetworkParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewNetboxAPIProxyAPIAllocateNetworkParamsWithTimeout(timeout time.Duration) *NetboxAPIProxyAPIAllocateNetworkParams {
	var ()
	return &NetboxAPIProxyAPIAllocateNetworkParams{

		timeout: timeout,
	}
}

// NewNetboxAPIProxyAPIAllocateNetworkParamsWithContext creates a new NetboxAPIProxyAPIAllocateNetworkParams object
// with the default values initialized, and the ability to set a context for a request
func NewNetboxAPIProxyAPIAllocateNetworkParamsWithContext(ctx context.Context) *NetboxAPIProxyAPIAllocateNetworkParams {
	var ()
	return &NetboxAPIProxyAPIAllocateNetworkParams{

		Context: ctx,
	}
}

// NewNetboxAPIProxyAPIAllocateNetworkParamsWithHTTPClient creates a new NetboxAPIProxyAPIAllocateNetworkParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewNetboxAPIProxyAPIAllocateNetworkParamsWithHTTPClient(client *http.Client) *NetboxAPIProxyAPIAllocateNetworkParams {
	var ()
	return &NetboxAPIProxyAPIAllocateNetworkParams{
		HTTPClient: client,
	}
}

/*NetboxAPIProxyAPIAllocateNetworkParams contains all the parameters to send to the API endpoint
for the netbox api proxy api allocate network operation typically these are written to a http.Request
*/
type NetboxAPIProxyAPIAllocateNetworkParams struct {

	/*Request
	  The network allocation body

	*/
	Request *models.NetworkAllocateRequest

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the netbox api proxy api allocate network params
func (o *NetboxAPIProxyAPIAllocateNetworkParams) WithTimeout(timeout time.Duration) *NetboxAPIProxyAPIAllocateNetworkParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the netbox api proxy api allocate network params
func (o *NetboxAPIProxyAPIAllocateNetworkParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the netbox api proxy api allocate network params
func (o *NetboxAPIProxyAPIAllocateNetworkParams) WithContext(ctx context.Context) *NetboxAPIProxyAPIAllocateNetworkParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the netbox api proxy api allocate network params
func (o *NetboxAPIProxyAPIAllocateNetworkParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the netbox api proxy api allocate network params
func (o *NetboxAPIProxyAPIAllocateNetworkParams) WithHTTPClient(client *http.Client) *NetboxAPIProxyAPIAllocateNetworkParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the netbox api proxy api allocate network params
func (o *NetboxAPIProxyAPIAllocateNetworkParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithRequest adds the request to the netbox api proxy api allocate network params
func (o *NetboxAPIProxyAPIAllocateNetworkParams) WithRequest(request *models.NetworkAllocateRequest) *NetboxAPIProxyAPIAllocateNetworkParams {
	o.SetRequest(request)
	return o
}

// SetRequest adds the request to the netbox api proxy api allocate network params
func (o *NetboxAPIProxyAPIAllocateNetworkParams) SetRequest(request *models.NetworkAllocateRequest) {
	o.Request = request
}

// WriteToRequest writes these params to a swagger request
func (o *NetboxAPIProxyAPIAllocateNetworkParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Request != nil {
		if err := r.SetBodyParam(o.Request); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
