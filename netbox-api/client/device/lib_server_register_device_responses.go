// Code generated by go-swagger; DO NOT EDIT.

package device

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// LibServerRegisterDeviceReader is a Reader for the LibServerRegisterDevice structure.
type LibServerRegisterDeviceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LibServerRegisterDeviceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewLibServerRegisterDeviceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewLibServerRegisterDeviceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewLibServerRegisterDeviceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewLibServerRegisterDeviceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewLibServerRegisterDeviceOK creates a LibServerRegisterDeviceOK with default headers values
func NewLibServerRegisterDeviceOK() *LibServerRegisterDeviceOK {
	return &LibServerRegisterDeviceOK{}
}

/*LibServerRegisterDeviceOK handles this case with default header values.

OK
*/
type LibServerRegisterDeviceOK struct {
}

func (o *LibServerRegisterDeviceOK) Error() string {
	return fmt.Sprintf("[POST /register-device/{uuid}][%d] libServerRegisterDeviceOK ", 200)
}

func (o *LibServerRegisterDeviceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLibServerRegisterDeviceBadRequest creates a LibServerRegisterDeviceBadRequest with default headers values
func NewLibServerRegisterDeviceBadRequest() *LibServerRegisterDeviceBadRequest {
	return &LibServerRegisterDeviceBadRequest{}
}

/*LibServerRegisterDeviceBadRequest handles this case with default header values.

Bad request
*/
type LibServerRegisterDeviceBadRequest struct {
}

func (o *LibServerRegisterDeviceBadRequest) Error() string {
	return fmt.Sprintf("[POST /register-device/{uuid}][%d] libServerRegisterDeviceBadRequest ", 400)
}

func (o *LibServerRegisterDeviceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLibServerRegisterDeviceNotFound creates a LibServerRegisterDeviceNotFound with default headers values
func NewLibServerRegisterDeviceNotFound() *LibServerRegisterDeviceNotFound {
	return &LibServerRegisterDeviceNotFound{}
}

/*LibServerRegisterDeviceNotFound handles this case with default header values.

Not found
*/
type LibServerRegisterDeviceNotFound struct {
}

func (o *LibServerRegisterDeviceNotFound) Error() string {
	return fmt.Sprintf("[POST /register-device/{uuid}][%d] libServerRegisterDeviceNotFound ", 404)
}

func (o *LibServerRegisterDeviceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLibServerRegisterDeviceInternalServerError creates a LibServerRegisterDeviceInternalServerError with default headers values
func NewLibServerRegisterDeviceInternalServerError() *LibServerRegisterDeviceInternalServerError {
	return &LibServerRegisterDeviceInternalServerError{}
}

/*LibServerRegisterDeviceInternalServerError handles this case with default header values.

Internal server error
*/
type LibServerRegisterDeviceInternalServerError struct {
}

func (o *LibServerRegisterDeviceInternalServerError) Error() string {
	return fmt.Sprintf("[POST /register-device/{uuid}][%d] libServerRegisterDeviceInternalServerError ", 500)
}

func (o *LibServerRegisterDeviceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
