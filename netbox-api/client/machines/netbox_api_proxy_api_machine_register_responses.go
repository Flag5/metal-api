// Code generated by go-swagger; DO NOT EDIT.

package machines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "git.f-i-ts.de/cloud-native/metal/metal-api/netbox-api/models"
)

// NetboxAPIProxyAPIMachineRegisterReader is a Reader for the NetboxAPIProxyAPIMachineRegister structure.
type NetboxAPIProxyAPIMachineRegisterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NetboxAPIProxyAPIMachineRegisterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewNetboxAPIProxyAPIMachineRegisterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewNetboxAPIProxyAPIMachineRegisterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewNetboxAPIProxyAPIMachineRegisterUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewNetboxAPIProxyAPIMachineRegisterForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewNetboxAPIProxyAPIMachineRegisterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewNetboxAPIProxyAPIMachineRegisterInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewNetboxAPIProxyAPIMachineRegisterOK creates a NetboxAPIProxyAPIMachineRegisterOK with default headers values
func NewNetboxAPIProxyAPIMachineRegisterOK() *NetboxAPIProxyAPIMachineRegisterOK {
	return &NetboxAPIProxyAPIMachineRegisterOK{}
}

/*NetboxAPIProxyAPIMachineRegisterOK handles this case with default header values.

OK
*/
type NetboxAPIProxyAPIMachineRegisterOK struct {
}

func (o *NetboxAPIProxyAPIMachineRegisterOK) Error() string {
	return fmt.Sprintf("[POST /machines/{uuid}/register][%d] netboxApiProxyApiMachineRegisterOK ", 200)
}

func (o *NetboxAPIProxyAPIMachineRegisterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNetboxAPIProxyAPIMachineRegisterBadRequest creates a NetboxAPIProxyAPIMachineRegisterBadRequest with default headers values
func NewNetboxAPIProxyAPIMachineRegisterBadRequest() *NetboxAPIProxyAPIMachineRegisterBadRequest {
	return &NetboxAPIProxyAPIMachineRegisterBadRequest{}
}

/*NetboxAPIProxyAPIMachineRegisterBadRequest handles this case with default header values.

Bad request
*/
type NetboxAPIProxyAPIMachineRegisterBadRequest struct {
	Payload *models.Problem
}

func (o *NetboxAPIProxyAPIMachineRegisterBadRequest) Error() string {
	return fmt.Sprintf("[POST /machines/{uuid}/register][%d] netboxApiProxyApiMachineRegisterBadRequest  %+v", 400, o.Payload)
}

func (o *NetboxAPIProxyAPIMachineRegisterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Problem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNetboxAPIProxyAPIMachineRegisterUnauthorized creates a NetboxAPIProxyAPIMachineRegisterUnauthorized with default headers values
func NewNetboxAPIProxyAPIMachineRegisterUnauthorized() *NetboxAPIProxyAPIMachineRegisterUnauthorized {
	return &NetboxAPIProxyAPIMachineRegisterUnauthorized{}
}

/*NetboxAPIProxyAPIMachineRegisterUnauthorized handles this case with default header values.

Unauthorized
*/
type NetboxAPIProxyAPIMachineRegisterUnauthorized struct {
	Payload *models.Problem
}

func (o *NetboxAPIProxyAPIMachineRegisterUnauthorized) Error() string {
	return fmt.Sprintf("[POST /machines/{uuid}/register][%d] netboxApiProxyApiMachineRegisterUnauthorized  %+v", 401, o.Payload)
}

func (o *NetboxAPIProxyAPIMachineRegisterUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Problem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNetboxAPIProxyAPIMachineRegisterForbidden creates a NetboxAPIProxyAPIMachineRegisterForbidden with default headers values
func NewNetboxAPIProxyAPIMachineRegisterForbidden() *NetboxAPIProxyAPIMachineRegisterForbidden {
	return &NetboxAPIProxyAPIMachineRegisterForbidden{}
}

/*NetboxAPIProxyAPIMachineRegisterForbidden handles this case with default header values.

Forbidden
*/
type NetboxAPIProxyAPIMachineRegisterForbidden struct {
	Payload *models.Problem
}

func (o *NetboxAPIProxyAPIMachineRegisterForbidden) Error() string {
	return fmt.Sprintf("[POST /machines/{uuid}/register][%d] netboxApiProxyApiMachineRegisterForbidden  %+v", 403, o.Payload)
}

func (o *NetboxAPIProxyAPIMachineRegisterForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Problem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNetboxAPIProxyAPIMachineRegisterNotFound creates a NetboxAPIProxyAPIMachineRegisterNotFound with default headers values
func NewNetboxAPIProxyAPIMachineRegisterNotFound() *NetboxAPIProxyAPIMachineRegisterNotFound {
	return &NetboxAPIProxyAPIMachineRegisterNotFound{}
}

/*NetboxAPIProxyAPIMachineRegisterNotFound handles this case with default header values.

Not found
*/
type NetboxAPIProxyAPIMachineRegisterNotFound struct {
	Payload *models.Problem
}

func (o *NetboxAPIProxyAPIMachineRegisterNotFound) Error() string {
	return fmt.Sprintf("[POST /machines/{uuid}/register][%d] netboxApiProxyApiMachineRegisterNotFound  %+v", 404, o.Payload)
}

func (o *NetboxAPIProxyAPIMachineRegisterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Problem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNetboxAPIProxyAPIMachineRegisterInternalServerError creates a NetboxAPIProxyAPIMachineRegisterInternalServerError with default headers values
func NewNetboxAPIProxyAPIMachineRegisterInternalServerError() *NetboxAPIProxyAPIMachineRegisterInternalServerError {
	return &NetboxAPIProxyAPIMachineRegisterInternalServerError{}
}

/*NetboxAPIProxyAPIMachineRegisterInternalServerError handles this case with default header values.

Internal server error
*/
type NetboxAPIProxyAPIMachineRegisterInternalServerError struct {
	Payload *models.Problem
}

func (o *NetboxAPIProxyAPIMachineRegisterInternalServerError) Error() string {
	return fmt.Sprintf("[POST /machines/{uuid}/register][%d] netboxApiProxyApiMachineRegisterInternalServerError  %+v", 500, o.Payload)
}

func (o *NetboxAPIProxyAPIMachineRegisterInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Problem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
