// Code generated by go-swagger; DO NOT EDIT.

package machines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "git.f-i-ts.de/cloud-native/metal/metal-api/netbox-api/models"
)

// NetboxAPIProxyAPIMachineReleaseReader is a Reader for the NetboxAPIProxyAPIMachineRelease structure.
type NetboxAPIProxyAPIMachineReleaseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NetboxAPIProxyAPIMachineReleaseReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewNetboxAPIProxyAPIMachineReleaseOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewNetboxAPIProxyAPIMachineReleaseBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewNetboxAPIProxyAPIMachineReleaseUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewNetboxAPIProxyAPIMachineReleaseForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewNetboxAPIProxyAPIMachineReleaseNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewNetboxAPIProxyAPIMachineReleaseInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewNetboxAPIProxyAPIMachineReleaseOK creates a NetboxAPIProxyAPIMachineReleaseOK with default headers values
func NewNetboxAPIProxyAPIMachineReleaseOK() *NetboxAPIProxyAPIMachineReleaseOK {
	return &NetboxAPIProxyAPIMachineReleaseOK{}
}

/*NetboxAPIProxyAPIMachineReleaseOK handles this case with default header values.

OK
*/
type NetboxAPIProxyAPIMachineReleaseOK struct {
}

func (o *NetboxAPIProxyAPIMachineReleaseOK) Error() string {
	return fmt.Sprintf("[POST /machines/{uuid}/release][%d] netboxApiProxyApiMachineReleaseOK ", 200)
}

func (o *NetboxAPIProxyAPIMachineReleaseOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNetboxAPIProxyAPIMachineReleaseBadRequest creates a NetboxAPIProxyAPIMachineReleaseBadRequest with default headers values
func NewNetboxAPIProxyAPIMachineReleaseBadRequest() *NetboxAPIProxyAPIMachineReleaseBadRequest {
	return &NetboxAPIProxyAPIMachineReleaseBadRequest{}
}

/*NetboxAPIProxyAPIMachineReleaseBadRequest handles this case with default header values.

Bad request
*/
type NetboxAPIProxyAPIMachineReleaseBadRequest struct {
	Payload *models.Problem
}

func (o *NetboxAPIProxyAPIMachineReleaseBadRequest) Error() string {
	return fmt.Sprintf("[POST /machines/{uuid}/release][%d] netboxApiProxyApiMachineReleaseBadRequest  %+v", 400, o.Payload)
}

func (o *NetboxAPIProxyAPIMachineReleaseBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Problem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNetboxAPIProxyAPIMachineReleaseUnauthorized creates a NetboxAPIProxyAPIMachineReleaseUnauthorized with default headers values
func NewNetboxAPIProxyAPIMachineReleaseUnauthorized() *NetboxAPIProxyAPIMachineReleaseUnauthorized {
	return &NetboxAPIProxyAPIMachineReleaseUnauthorized{}
}

/*NetboxAPIProxyAPIMachineReleaseUnauthorized handles this case with default header values.

Unauthorized
*/
type NetboxAPIProxyAPIMachineReleaseUnauthorized struct {
	Payload *models.Problem
}

func (o *NetboxAPIProxyAPIMachineReleaseUnauthorized) Error() string {
	return fmt.Sprintf("[POST /machines/{uuid}/release][%d] netboxApiProxyApiMachineReleaseUnauthorized  %+v", 401, o.Payload)
}

func (o *NetboxAPIProxyAPIMachineReleaseUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Problem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNetboxAPIProxyAPIMachineReleaseForbidden creates a NetboxAPIProxyAPIMachineReleaseForbidden with default headers values
func NewNetboxAPIProxyAPIMachineReleaseForbidden() *NetboxAPIProxyAPIMachineReleaseForbidden {
	return &NetboxAPIProxyAPIMachineReleaseForbidden{}
}

/*NetboxAPIProxyAPIMachineReleaseForbidden handles this case with default header values.

Forbidden
*/
type NetboxAPIProxyAPIMachineReleaseForbidden struct {
	Payload *models.Problem
}

func (o *NetboxAPIProxyAPIMachineReleaseForbidden) Error() string {
	return fmt.Sprintf("[POST /machines/{uuid}/release][%d] netboxApiProxyApiMachineReleaseForbidden  %+v", 403, o.Payload)
}

func (o *NetboxAPIProxyAPIMachineReleaseForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Problem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNetboxAPIProxyAPIMachineReleaseNotFound creates a NetboxAPIProxyAPIMachineReleaseNotFound with default headers values
func NewNetboxAPIProxyAPIMachineReleaseNotFound() *NetboxAPIProxyAPIMachineReleaseNotFound {
	return &NetboxAPIProxyAPIMachineReleaseNotFound{}
}

/*NetboxAPIProxyAPIMachineReleaseNotFound handles this case with default header values.

Not found
*/
type NetboxAPIProxyAPIMachineReleaseNotFound struct {
	Payload *models.Problem
}

func (o *NetboxAPIProxyAPIMachineReleaseNotFound) Error() string {
	return fmt.Sprintf("[POST /machines/{uuid}/release][%d] netboxApiProxyApiMachineReleaseNotFound  %+v", 404, o.Payload)
}

func (o *NetboxAPIProxyAPIMachineReleaseNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Problem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNetboxAPIProxyAPIMachineReleaseInternalServerError creates a NetboxAPIProxyAPIMachineReleaseInternalServerError with default headers values
func NewNetboxAPIProxyAPIMachineReleaseInternalServerError() *NetboxAPIProxyAPIMachineReleaseInternalServerError {
	return &NetboxAPIProxyAPIMachineReleaseInternalServerError{}
}

/*NetboxAPIProxyAPIMachineReleaseInternalServerError handles this case with default header values.

Internal server error
*/
type NetboxAPIProxyAPIMachineReleaseInternalServerError struct {
	Payload *models.Problem
}

func (o *NetboxAPIProxyAPIMachineReleaseInternalServerError) Error() string {
	return fmt.Sprintf("[POST /machines/{uuid}/release][%d] netboxApiProxyApiMachineReleaseInternalServerError  %+v", 500, o.Payload)
}

func (o *NetboxAPIProxyAPIMachineReleaseInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Problem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
