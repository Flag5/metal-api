// Code generated by go-swagger; DO NOT EDIT.

package switches

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "git.f-i-ts.de/cloud-native/metal/metal-api/netbox-api/models"
)

// NetboxAPIProxyAPISwitchRegisterReader is a Reader for the NetboxAPIProxyAPISwitchRegister structure.
type NetboxAPIProxyAPISwitchRegisterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NetboxAPIProxyAPISwitchRegisterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewNetboxAPIProxyAPISwitchRegisterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewNetboxAPIProxyAPISwitchRegisterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewNetboxAPIProxyAPISwitchRegisterUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewNetboxAPIProxyAPISwitchRegisterForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewNetboxAPIProxyAPISwitchRegisterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewNetboxAPIProxyAPISwitchRegisterInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewNetboxAPIProxyAPISwitchRegisterOK creates a NetboxAPIProxyAPISwitchRegisterOK with default headers values
func NewNetboxAPIProxyAPISwitchRegisterOK() *NetboxAPIProxyAPISwitchRegisterOK {
	return &NetboxAPIProxyAPISwitchRegisterOK{}
}

/*NetboxAPIProxyAPISwitchRegisterOK handles this case with default header values.

OK
*/
type NetboxAPIProxyAPISwitchRegisterOK struct {
}

func (o *NetboxAPIProxyAPISwitchRegisterOK) Error() string {
	return fmt.Sprintf("[POST /switches/{uuid}/register][%d] netboxApiProxyApiSwitchRegisterOK ", 200)
}

func (o *NetboxAPIProxyAPISwitchRegisterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNetboxAPIProxyAPISwitchRegisterBadRequest creates a NetboxAPIProxyAPISwitchRegisterBadRequest with default headers values
func NewNetboxAPIProxyAPISwitchRegisterBadRequest() *NetboxAPIProxyAPISwitchRegisterBadRequest {
	return &NetboxAPIProxyAPISwitchRegisterBadRequest{}
}

/*NetboxAPIProxyAPISwitchRegisterBadRequest handles this case with default header values.

Bad request
*/
type NetboxAPIProxyAPISwitchRegisterBadRequest struct {
	Payload *models.Problem
}

func (o *NetboxAPIProxyAPISwitchRegisterBadRequest) Error() string {
	return fmt.Sprintf("[POST /switches/{uuid}/register][%d] netboxApiProxyApiSwitchRegisterBadRequest  %+v", 400, o.Payload)
}

func (o *NetboxAPIProxyAPISwitchRegisterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Problem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNetboxAPIProxyAPISwitchRegisterUnauthorized creates a NetboxAPIProxyAPISwitchRegisterUnauthorized with default headers values
func NewNetboxAPIProxyAPISwitchRegisterUnauthorized() *NetboxAPIProxyAPISwitchRegisterUnauthorized {
	return &NetboxAPIProxyAPISwitchRegisterUnauthorized{}
}

/*NetboxAPIProxyAPISwitchRegisterUnauthorized handles this case with default header values.

Unauthorized
*/
type NetboxAPIProxyAPISwitchRegisterUnauthorized struct {
	Payload *models.Problem
}

func (o *NetboxAPIProxyAPISwitchRegisterUnauthorized) Error() string {
	return fmt.Sprintf("[POST /switches/{uuid}/register][%d] netboxApiProxyApiSwitchRegisterUnauthorized  %+v", 401, o.Payload)
}

func (o *NetboxAPIProxyAPISwitchRegisterUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Problem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNetboxAPIProxyAPISwitchRegisterForbidden creates a NetboxAPIProxyAPISwitchRegisterForbidden with default headers values
func NewNetboxAPIProxyAPISwitchRegisterForbidden() *NetboxAPIProxyAPISwitchRegisterForbidden {
	return &NetboxAPIProxyAPISwitchRegisterForbidden{}
}

/*NetboxAPIProxyAPISwitchRegisterForbidden handles this case with default header values.

Forbidden
*/
type NetboxAPIProxyAPISwitchRegisterForbidden struct {
	Payload *models.Problem
}

func (o *NetboxAPIProxyAPISwitchRegisterForbidden) Error() string {
	return fmt.Sprintf("[POST /switches/{uuid}/register][%d] netboxApiProxyApiSwitchRegisterForbidden  %+v", 403, o.Payload)
}

func (o *NetboxAPIProxyAPISwitchRegisterForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Problem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNetboxAPIProxyAPISwitchRegisterNotFound creates a NetboxAPIProxyAPISwitchRegisterNotFound with default headers values
func NewNetboxAPIProxyAPISwitchRegisterNotFound() *NetboxAPIProxyAPISwitchRegisterNotFound {
	return &NetboxAPIProxyAPISwitchRegisterNotFound{}
}

/*NetboxAPIProxyAPISwitchRegisterNotFound handles this case with default header values.

Not found
*/
type NetboxAPIProxyAPISwitchRegisterNotFound struct {
	Payload *models.Problem
}

func (o *NetboxAPIProxyAPISwitchRegisterNotFound) Error() string {
	return fmt.Sprintf("[POST /switches/{uuid}/register][%d] netboxApiProxyApiSwitchRegisterNotFound  %+v", 404, o.Payload)
}

func (o *NetboxAPIProxyAPISwitchRegisterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Problem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNetboxAPIProxyAPISwitchRegisterInternalServerError creates a NetboxAPIProxyAPISwitchRegisterInternalServerError with default headers values
func NewNetboxAPIProxyAPISwitchRegisterInternalServerError() *NetboxAPIProxyAPISwitchRegisterInternalServerError {
	return &NetboxAPIProxyAPISwitchRegisterInternalServerError{}
}

/*NetboxAPIProxyAPISwitchRegisterInternalServerError handles this case with default header values.

Internal server error
*/
type NetboxAPIProxyAPISwitchRegisterInternalServerError struct {
	Payload *models.Problem
}

func (o *NetboxAPIProxyAPISwitchRegisterInternalServerError) Error() string {
	return fmt.Sprintf("[POST /switches/{uuid}/register][%d] netboxApiProxyApiSwitchRegisterInternalServerError  %+v", 500, o.Payload)
}

func (o *NetboxAPIProxyAPISwitchRegisterInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Problem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
